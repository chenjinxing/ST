<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.PartnerMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Partner">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    <id column="partnerId" jdbcType="INTEGER" property="partnerid" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="abbreviation" jdbcType="VARCHAR" property="abbreviation" />
    <result column="partnerCode" jdbcType="VARCHAR" property="partnercode" />
    <result column="partnerKey" jdbcType="VARCHAR" property="partnerkey" />
    
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    partnerId, typeId, name, abbreviation, partnerCode, partnerKey
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    select p.*,t.typeName from partner p,partnertype t where p.typeId =t.typeId
    and partnerId = #{partnerid,jdbcType=INTEGER}
  </select>
  <select id="selectByUniqueKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    select p.*,t.typeName from partner p,partnertype t where p.typeId =t.typeId
    and partnerCode = #{partnercode,jdbcType=VARCHAR}
  </select>
  <select id="selectSelectivePaging" resultMap="BaseResultMap">
    select p.*,t.typeName from partner p,partnertype t
    <where>
      p.typeId =t.typeId and 
      <if test="record.typeid != null">
        p.typeid = #{record.typeid,jdbcType=INTEGER} and 
      </if>
      <if test="record.partnerId != null">
        p.partnerId = #{record.partnerId,jdbcType=INTEGER} and 
      </if>
      <if test="record.name != null">
        p.name = #{record.name,jdbcType=VARCHAR} and 
      </if>
      <if test="record.abbreviation != null">
        p.abbreviation = #{record.abbreviation,jdbcType=VARCHAR} and 
      </if>
      <if test="record.partnerCode != null">
        p.partnerCode = #{record.partnerCode,jdbcType=VARCHAR} and 
      </if>
      <if test="record.partnerKey != null">
        p.partnerKey = #{record.partnerKey,jdbcType=VARCHAR} and 
      </if>
      <if test="search != null">
      (
        locate(#{search,jdbcType=VARCHAR},name) >0 or 
        locate(#{search,jdbcType=VARCHAR},abbreviation) >0 or
        locate(#{search,jdbcType=VARCHAR},partnerCode) >0 
        )
        and
      </if>
      0 =0
    </where>
    limit #{start,jdbcType=INTEGER},#{size,jdbcType=INTEGER}
  </select>
  <select id="selectCountSelective" resultType="java.lang.Integer">
    select 
    count(*)
    from partner
    <where>
      <if test="record.typeid != null">
        typeid = #{record.typeid,jdbcType=INTEGER} and 
      </if>
      <if test="record.partnerId != null">
        partnerId = #{record.partnerId,jdbcType=INTEGER} and 
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR} and 
      </if>
      <if test="record.abbreviation != null">
        abbreviation = #{record.abbreviation,jdbcType=VARCHAR} and 
      </if>
      <if test="record.partnerCode != null">
        partnerCode = #{record.partnerCode,jdbcType=VARCHAR} and 
      </if>
      <if test="record.partnerKey != null">
        partnerKey = #{record.partnerKey,jdbcType=VARCHAR} and 
      </if>
      <if test="search != null">
        locate(#{search,jdbcType=VARCHAR},name) >0 or 
        locate(#{search,jdbcType=VARCHAR},abbreviation) >0 or
        locate(#{search,jdbcType=VARCHAR},partnerCode) >0 and 
      </if>
      0 =0
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    delete from partner
    where partnerId = #{partnerid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Partner">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    insert into partner (partnerId, typeId, name, 
      abbreviation, partnerCode, partnerKey
      )
    values (#{partnerid,jdbcType=INTEGER}, #{typeid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{abbreviation,jdbcType=VARCHAR}, #{partnercode,jdbcType=VARCHAR}, #{partnerkey,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Partner">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    insert into partner
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="partnerid != null">
        partnerId,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="abbreviation != null">
        abbreviation,
      </if>
      <if test="partnercode != null">
        partnerCode,
      </if>
      <if test="partnerkey != null">
        partnerKey,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="partnerid != null">
        #{partnerid,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null">
        #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="partnercode != null">
        #{partnercode,jdbcType=VARCHAR},
      </if>
      <if test="partnerkey != null">
        #{partnerkey,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Partner">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    update partner
    <set>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="abbreviation != null">
        abbreviation = #{abbreviation,jdbcType=VARCHAR},
      </if>
      <if test="partnercode != null">
        partnerCode = #{partnercode,jdbcType=VARCHAR},
      </if>
      <if test="partnerkey != null">
        partnerKey = #{partnerkey,jdbcType=VARCHAR},
      </if>
    </set>
    where partnerId = #{partnerid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Partner">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jun 12 16:59:45 CST 2018.
    -->
    update partner
    set typeId = #{typeid,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      abbreviation = #{abbreviation,jdbcType=VARCHAR},
      partnerCode = #{partnercode,jdbcType=VARCHAR},
      partnerKey = #{partnerkey,jdbcType=VARCHAR}
    where partnerId = #{partnerid,jdbcType=INTEGER}
  </update>
</mapper>